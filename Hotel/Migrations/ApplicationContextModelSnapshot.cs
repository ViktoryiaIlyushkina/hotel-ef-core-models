// <auto-generated />
using System;
using Hotel.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalDate = new DateTime(2023, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2023, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 1,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArrivalDate = new DateTime(2023, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2023, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 2,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 3,
                            ArrivalDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2023, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 3,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 4,
                            ArrivalDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 4,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 5,
                            ArrivalDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2024, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 5,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 6,
                            ArrivalDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2024, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 6,
                            RoomId = 6
                        },
                        new
                        {
                            Id = 7,
                            ArrivalDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 7,
                            RoomId = 7
                        },
                        new
                        {
                            Id = 8,
                            ArrivalDate = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2024, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 8,
                            RoomId = 8
                        },
                        new
                        {
                            Id = 9,
                            ArrivalDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2024, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 9,
                            RoomId = 9
                        },
                        new
                        {
                            Id = 10,
                            ArrivalDate = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(2024, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 10,
                            RoomId = 10
                        });
                });

            modelBuilder.Entity("Hotel.Models.ExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Wi-Fi access",
                            Price = 5.00m,
                            ServiceName = "Wi-Fi"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Drinks and snacks in the mini-bar",
                            Price = 10.00m,
                            ServiceName = "Mini-bar"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Check-in before standard time",
                            Price = 20.00m,
                            ServiceName = "Early check-in"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Check-out after standard time",
                            Price = 25.00m,
                            ServiceName = "Late check-out"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Extra bed in the room",
                            Price = 15.00m,
                            ServiceName = "Extra bed"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Baby cot in the room",
                            Price = 10.00m,
                            ServiceName = "Baby cot"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Ironing services",
                            Price = 5.00m,
                            ServiceName = "Iron and ironing board"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Hairdryer",
                            Price = 5.00m,
                            ServiceName = "Hairdryer"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Bathrobe and slippers",
                            Price = 10.00m,
                            ServiceName = "Bathrobe and slippers"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Parking space",
                            Price = 15.00m,
                            ServiceName = "Parking"
                        });
                });

            modelBuilder.Entity("Hotel.Models.ExtraServiceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("ExtraServiceId");

                    b.ToTable("ExtraServiceOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            ExtraServiceId = 1,
                            OrderDate = new DateTime(2023, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 2,
                            ExtraServiceId = 2,
                            OrderDate = new DateTime(2023, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BookingId = 3,
                            ExtraServiceId = 3,
                            OrderDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BookingId = 4,
                            ExtraServiceId = 4,
                            OrderDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            BookingId = 5,
                            ExtraServiceId = 5,
                            OrderDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            BookingId = 6,
                            ExtraServiceId = 6,
                            OrderDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            BookingId = 7,
                            ExtraServiceId = 7,
                            OrderDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            BookingId = 8,
                            ExtraServiceId = 8,
                            OrderDate = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            BookingId = 9,
                            ExtraServiceId = 9,
                            OrderDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            BookingId = 10,
                            ExtraServiceId = 10,
                            OrderDate = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Hotel.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            PhoneNumber = "555-123-4567"
                        },
                        new
                        {
                            Id = 4,
                            Email = "bob.williams@example.com",
                            FirstName = "Bob",
                            LastName = "Williams",
                            PhoneNumber = "555-456-7890"
                        },
                        new
                        {
                            Id = 5,
                            Email = "charlie.brown@example.com",
                            FirstName = "Charlie",
                            LastName = "Brown",
                            PhoneNumber = "555-789-0123"
                        },
                        new
                        {
                            Id = 6,
                            Email = "david.davis@example.com",
                            FirstName = "David",
                            LastName = "Davis",
                            PhoneNumber = "555-012-3456"
                        },
                        new
                        {
                            Id = 7,
                            Email = "emily.wilson@example.com",
                            FirstName = "Emily",
                            LastName = "Wilson",
                            PhoneNumber = "555-345-6789"
                        },
                        new
                        {
                            Id = 8,
                            Email = "frank.moore@example.com",
                            FirstName = "Frank",
                            LastName = "Moore",
                            PhoneNumber = "555-678-9012"
                        },
                        new
                        {
                            Id = 9,
                            Email = "grace.taylor@example.com",
                            FirstName = "Grace",
                            LastName = "Taylor",
                            PhoneNumber = "555-901-2345"
                        },
                        new
                        {
                            Id = 10,
                            Email = "henry.anderson@example.com",
                            FirstName = "Henry",
                            LastName = "Anderson",
                            PhoneNumber = "555-234-5678"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 300.00m,
                            BookingId = 1,
                            PaymentDate = new DateTime(2023, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Card"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 600.00m,
                            BookingId = 2,
                            PaymentDate = new DateTime(2023, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 400.00m,
                            BookingId = 3,
                            PaymentDate = new DateTime(2023, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Card"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 800.00m,
                            BookingId = 4,
                            PaymentDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Cash"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 500.00m,
                            BookingId = 5,
                            PaymentDate = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Card"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 700.00m,
                            BookingId = 6,
                            PaymentDate = new DateTime(2024, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Cash"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 300.00m,
                            BookingId = 7,
                            PaymentDate = new DateTime(2024, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Card"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 600.00m,
                            BookingId = 8,
                            PaymentDate = new DateTime(2024, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Cash"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 400.00m,
                            BookingId = 9,
                            PaymentDate = new DateTime(2024, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Card"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 800.00m,
                            BookingId = 10,
                            PaymentDate = new DateTime(2024, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Cash"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            Comment = "Great hotel! Clean, cozy, friendly staff.",
                            FirstName = "John",
                            LastName = "Doe",
                            Rating = 4
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 2,
                            Comment = "Excellent room with a beautiful view. Highly recommend!",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Rating = 5
                        },
                        new
                        {
                            Id = 3,
                            BookingId = 3,
                            Comment = "Overall not bad, but breakfast could be better.",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Rating = 3
                        },
                        new
                        {
                            Id = 4,
                            BookingId = 4,
                            Comment = "Good location, easy access to transportation.",
                            FirstName = "Bob",
                            LastName = "Williams",
                            Rating = 4
                        },
                        new
                        {
                            Id = 5,
                            BookingId = 5,
                            Comment = "Superb service, staff very attentive.",
                            FirstName = "Charlie",
                            LastName = "Brown",
                            Rating = 5
                        },
                        new
                        {
                            Id = 6,
                            BookingId = 6,
                            Comment = "Clean and comfortable room, great internet.",
                            FirstName = "David",
                            LastName = "Davis",
                            Rating = 4
                        },
                        new
                        {
                            Id = 7,
                            BookingId = 7,
                            Comment = "The price is a bit overpriced for such a room.",
                            FirstName = "Emily",
                            LastName = "Wilson",
                            Rating = 3
                        },
                        new
                        {
                            Id = 8,
                            BookingId = 8,
                            Comment = "Unforgettable vacation! Everything was just great!",
                            FirstName = "Frank",
                            LastName = "Moore",
                            Rating = 5
                        },
                        new
                        {
                            Id = 9,
                            BookingId = 9,
                            Comment = "Good hotel for business trips.",
                            FirstName = "Grace",
                            LastName = "Taylor",
                            Rating = 4
                        },
                        new
                        {
                            Id = 10,
                            BookingId = 10,
                            Comment = "Excellent choice for family vacation.",
                            FirstName = "Henry",
                            LastName = "Anderson",
                            Rating = 5
                        });
                });

            modelBuilder.Entity("Hotel.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 2,
                            Floor = 1,
                            PricePerNight = 100.00m,
                            RoomType = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 4,
                            Floor = 2,
                            PricePerNight = 200.00m,
                            RoomType = "Suite"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            Floor = 1,
                            PricePerNight = 100.00m,
                            RoomType = "Standard"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 4,
                            Floor = 2,
                            PricePerNight = 200.00m,
                            RoomType = "Suite"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 2,
                            Floor = 1,
                            PricePerNight = 100.00m,
                            RoomType = "Standard"
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 4,
                            Floor = 2,
                            PricePerNight = 200.00m,
                            RoomType = "Suite"
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 2,
                            Floor = 1,
                            PricePerNight = 100.00m,
                            RoomType = "Standard"
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 4,
                            Floor = 2,
                            PricePerNight = 200.00m,
                            RoomType = "Suite"
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 2,
                            Floor = 1,
                            PricePerNight = 100.00m,
                            RoomType = "Standard"
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 4,
                            Floor = 2,
                            PricePerNight = 200.00m,
                            RoomType = "Suite"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Daily room cleaning",
                            Price = 10.00m,
                            ServiceName = "Cleaning",
                            ServiceType = "Cleaning"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Continental breakfast",
                            Price = 15.00m,
                            ServiceName = "Breakfast",
                            ServiceType = "Breakfast"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Laundry service",
                            Price = 20.00m,
                            ServiceName = "Laundry",
                            ServiceType = "Services"
                        },
                        new
                        {
                            Id = 4,
                            Description = "In-room dining",
                            Price = 25.00m,
                            ServiceName = "Room service",
                            ServiceType = "Services"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Airport transfer",
                            Price = 30.00m,
                            ServiceName = "Transfer",
                            ServiceType = "Services"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lunch at the restaurant",
                            Price = 15.00m,
                            ServiceName = "Lunch",
                            ServiceType = "Dining"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Dinner at the restaurant",
                            Price = 20.00m,
                            ServiceName = "Dinner",
                            ServiceType = "Dining"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Drinks and snacks",
                            Price = 10.00m,
                            ServiceName = "Bar",
                            ServiceType = "Services"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Wi-Fi access",
                            Price = 5.00m,
                            ServiceName = "Wi-Fi",
                            ServiceType = "Services"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Movie watching",
                            Price = 15.00m,
                            ServiceName = "Home theater",
                            ServiceType = "Services"
                        });
                });

            modelBuilder.Entity("Hotel.Models.ServiceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            OrderDate = new DateTime(2023, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 2,
                            OrderDate = new DateTime(2023, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookingId = 3,
                            OrderDate = new DateTime(2023, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookingId = 4,
                            OrderDate = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookingId = 5,
                            OrderDate = new DateTime(2024, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 6,
                            BookingId = 6,
                            OrderDate = new DateTime(2024, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 7,
                            BookingId = 7,
                            OrderDate = new DateTime(2024, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 8,
                            BookingId = 8,
                            OrderDate = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 9,
                            BookingId = 9,
                            OrderDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 10,
                            BookingId = 10,
                            OrderDate = new DateTime(2024, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            ServiceId = 10
                        });
                });

            modelBuilder.Entity("Hotel.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "Administration",
                            FirstName = "Peter",
                            LastName = "Smith",
                            Position = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Department = "Administration",
                            FirstName = "Mary",
                            LastName = "Jones",
                            Position = "Receptionist"
                        },
                        new
                        {
                            Id = 3,
                            Department = "Kitchen",
                            FirstName = "David",
                            LastName = "Brown",
                            Position = "Chef"
                        },
                        new
                        {
                            Id = 4,
                            Department = "Restaurant",
                            FirstName = "Lisa",
                            LastName = "Wilson",
                            Position = "Waiter"
                        },
                        new
                        {
                            Id = 5,
                            Department = "Cleaning",
                            FirstName = "Michael",
                            LastName = "Davis",
                            Position = "Maid"
                        },
                        new
                        {
                            Id = 6,
                            Department = "Bar",
                            FirstName = "Susan",
                            LastName = "Garcia",
                            Position = "Bartender"
                        },
                        new
                        {
                            Id = 7,
                            Department = "Transfer",
                            FirstName = "John",
                            LastName = "Rodriguez",
                            Position = "Driver"
                        },
                        new
                        {
                            Id = 8,
                            Department = "Technical Department",
                            FirstName = "Jennifer",
                            LastName = "Martinez",
                            Position = "Technician"
                        },
                        new
                        {
                            Id = 9,
                            Department = "Cleaning",
                            FirstName = "Thomas",
                            LastName = "Robinson",
                            Position = "Housekeeper"
                        },
                        new
                        {
                            Id = 10,
                            Department = "Finance Department",
                            FirstName = "Patricia",
                            LastName = "Lee",
                            Position = "Accountant"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Booking", b =>
                {
                    b.HasOne("Hotel.Models.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hotel.Models.ExtraServiceOrder", b =>
                {
                    b.HasOne("Hotel.Models.Booking", "Booking")
                        .WithMany("ExtraServiceOrders")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.ExtraService", "ExtraService")
                        .WithMany("ExtraServiceOrders")
                        .HasForeignKey("ExtraServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("ExtraService");
                });

            modelBuilder.Entity("Hotel.Models.Payment", b =>
                {
                    b.HasOne("Hotel.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Hotel.Models.Review", b =>
                {
                    b.HasOne("Hotel.Models.Booking", "Booking")
                        .WithMany("Reviews")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Hotel.Models.ServiceOrder", b =>
                {
                    b.HasOne("Hotel.Models.Booking", "Booking")
                        .WithMany("ServiceOrders")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Service", "Service")
                        .WithMany("ServiceOrders")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Hotel.Models.Booking", b =>
                {
                    b.Navigation("ExtraServiceOrders");

                    b.Navigation("Payments");

                    b.Navigation("Reviews");

                    b.Navigation("ServiceOrders");
                });

            modelBuilder.Entity("Hotel.Models.ExtraService", b =>
                {
                    b.Navigation("ExtraServiceOrders");
                });

            modelBuilder.Entity("Hotel.Models.Guest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Hotel.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Hotel.Models.Service", b =>
                {
                    b.Navigation("ServiceOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
